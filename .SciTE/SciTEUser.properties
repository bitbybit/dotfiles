abbreviations.*.css=$(SciteUserHome)/.SciTE/abbrev/css.abbrev.properties
abbreviations.*.html=$(SciteUserHome)/.SciTE/abbrev/html.abbrev.properties

code.page=65001
#character.set=1251
#character.set=204
LC_CTYPE=en_US.UTF-8
<html>
if PLAT_WIN
	position.left=0
	position.top=0
if PLAT_GTK
	position.left=270
	position.top=145
position.width=820
position.height=440
horizontal.scroll.width=100

full.screen.hides.menu=1
view.whitespace=1

# Вывод данных непосредственно на экран (0) или сначала в буфер, и только потом на экран (1)
buffered.draw=1
# При 1 - более качественный (но и более медленный) способ прорисовки текста
two.phase.draw=1
# 1 устанавливает цветовую палитру в 8 бит
use.palette=1

# 1 включает слежение за тем, не был ли открытый в SciTE файл модифицирован другой программой
load.on.activate=1
# 1 включает запрос "Файл изменен другой программой. Перезагрузить его?"
are.you.sure.on.reload=1
# 1 включает запрос при сохранении "Файл изменен другой программой. Переписать его?"
save.check.modified.time=1
# 1 включает автоматическое сохранение файла при потере фокуса SciTE
#~ save.on.deactivate=1
# 1 - при перезагрузке файла не удаляется история отмены
reload.preserves.undo=1
# Если SciTE открыт, то файлы загружаются в существующую копию программы
check.if.already.open=1

# Определяет используемый режим языка для создаваемого (Ctrl+N) файла, прежде чем ему будет назначено имя
default.file.ext=.html

# 1 при сохранении удаляет символы пробелов и табуляции на концах строк
strip.trailing.spaces=1
# 1 при сохранении добавляет в конец последней строки файла символ окончания строки (если он отсутствует)
#ensure.final.line.end=1
# 1 при сохранении файла устанавливает в окончание всех линий текущий символ окончания строки (CRLF, CR, LF)
ensure.consistent.line.ends=1

# Параметр selection.hide.on.deactivate=0 позволяет не снимать выделение с текста когда окно SciTE теряет фокус.
selection.hide.on.deactivate=0

# Выбор, как будет отображаться имя файла в заголовке:
# 0(по умолчанию) -  отображается только имя файла
# 1 - отображается - путь\имя_файла
# 2 - отображается - имя_файла in путь
title.full.path=2
# Отображается ли номер активного буфера в заголовке.
# 0 - не отображается
# 1 - отображается - [1 of 3]
title.show.buffers=1

# Отбражать или нет колонку с номерами строк и меток(bookmarks).
line.margin.visible=1
# Резервирует ширину колонки, с точки зрения количества цифр в номере.
# Для автоматического увеличения ширины поля, необходимо добавить + после цифры
line.margin.width=2+
# Размер колонки (в пикселях) для меток(bookmarks). (Требует перезапуска)
margin.width=13

# Размер отступа с обеих сторон текста (в пикселях)
blank.margin.left=4
#~ blank.margin.right=4

# Автоматически очищает окно консоли перед выполнением любого скрипта
# т.е. выполняет команду output:ClearAll()  (LUA)
#~ clear.before.execute=1
# 1 - окно консоли справа, 0 - внизу
split.vertical=0
# размеры окна консоли
output.cache.layout=3
# 1 - после завершения команды выводится время ее выполнения (в секундах)
time.commands=1

# Показывать панель вкладок (0/1)
tabbar.visible=1
# Скрывать панель вкладок, если открыт только один файл
tabbar.hide.one=1
# Панель вкладок в несколько строк
tabbar.multiline=1
# Количество вкладок
buffers=100

toolbar.visible=0

# Показывать панель состояния (0/1)
statusbar.visible=1

# Подсветка парных скобок (0/1)
braces.check=1
braces.sloppy=1

# Показывать символы конца строки
view.eol=0
# Задает символ перевода строки (CR, LF или CRLF)
#~ eol.mode=LF
# Эта установка отменяет eol.mode, и выбирает символ перевода строки исходя из текущего содержания файла
eol.auto=1
# Символ для отображения непечатных символов
#~ control.char.symbol=°
# Показывать пробелы и табуляции (0/1)
view.whitespace=1
view.indentation.whitespace=1
view.indentation.guides=1
highlight.indentation.guides=1

# размер отступа
tabsize=2
# размер отступа, для использования при автоматических отступах
indent.size=2
# При 0 символ табуляции при вводе автоматически заменяется на пробелы
use.tabs=0
# при 1 значения indent.size и use.tabs берутся из открытого документа
indent.auto=0
# при 1 символ табуляции при вводе автоматически заменяется на indent.size пробелов
tab.indents=1
# при 1 нажатие на backspace в пределах отступа удалит indent.size пробелов
backspace.unindents=1

# При 1 - включение автоматического отступа
indent.automatic=1
indent.opening=0
indent.closing=0
#~ indent.maintain.*=0

# Задание ширины для правой ограничительной линии (если больше - то это считается превышением и может отмечаться)
edge.column=100
# Способ показа превышения допустимой ширины (0-без показа, 1-линия, 2-цвет)
edge.mode=1

# Переносить длинные строки (0/1)
wrap=1
#~ wrap.style=2
wrap.visual.flags=3
wrap.visual.flags.location=1
wrap.visual.startindent=4
wrap.indent.mode=1
# при нажатии на home end курсор позиционируется в строке с учетом переноса
wrap.aware.home.end.keys=1
cache.layout=3
# Переносить длинные строки в консоли (0/1)
output.wrap=1

# Включаем фолдинг (0/1)
fold=1
# Сворачивать при открытии файла (0/1)
#~ fold.on.open=1
# Тип фолдинга (2/4/8/16)
fold.flags=16
#~ fold.compact=0
#Символ фолдинга (0/1/2/3)
fold.symbols=3
fold.compact=0
fold.comment=1
fold.comment.python=1
fold.quotes.python=1
fold.preprocessor=1
fold.html.preprocessor=0

# ПОИСК В ТЕКУЩЕМ ФАЙЛЕ
#~ find.in.files.close.on.find=0
#~ find.replace.matchcase=1
#~ find.replace.escapes=1
#~ find.replace.regexp=1
find.replace.regexp.posix=1
#~ find.replace.wrap=0
#~ find.replacewith.focus=0
# Если 1, то вместо диалогового окна поиска используется панель
find.use.strip=0
# Если 1, то вместо диалогового окна замены используется панель
replace.use.strip=0
# Если 0, то диалоговое окно поиска не закрывается автоматически
find.close.on.find=0
# Включает кнопку "Replace in Buffers" в диалоге замены и чекбокс для поиска в определенном стиле
find.replace.advanced=1
# Отметка всех вхождений текста полупрозначным цветным прямоугольником после нажатия "Пометить все" в диалоге поиска (очень удобно)
find.mark=#0F0F0F

#~ export.keep.ext=1
export.html.wysiwyg=1
#~ export.html.tabs=1
#~ export.html.folding=1
export.html.styleused=1
#~ export.html.title.fullpath=1
#~ export.rtf.tabs=1
#~ export.rtf.font.face=Arial
#~ export.rtf.font.size=9
#~ export.rtf.tabsize=8
# Magnification (added to default screen font size)
export.pdf.magnification=0
# Font: Courier, Helvetica or Times (Courier line-wraps)
export.pdf.font=Courier
# Page size (in points): width, height
# E.g. Letter 612,792; A4 595,842; maximum 14400,14400
export.pdf.pagesize=595,842
# Margins (in points): left, right, top, bottom
export.pdf.margins=72,72,72,72
export.xml.collapse.spaces=1
export.xml.collapse.lines=1

# Показывать панель состояния (0/1)
statusbar.visible=1
statusbar.text.1=\
 $(NbOfLines) lines $(BufferLength) bytes\
  |  li=$(LineNumber) co=$(ColumnNumber)\
  |  Select: $(SelHeight) lines $(SelLength) bytes\
  |  $(OverType)\
  |  $(EOLMode)

# Данные переменные используются при задании других параметров (word.characters)
chars.alpha=abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ
chars.numeric=0123456789
# Символы национального алфавита (В SciTE-Ru данная переменная задается скриптом CodePage.lua)
chars.accented=АаБбВвГгДдЕеЁёЖжЗзИиЙйКкЛлМмНнОоПпРрСсТтУуФфХхЦцЧчШшЩщЪъЫыЬьЭэЮюЯя
# Определяет символы, являющиеся частью слов
word.characters.*=$(chars.alpha)$(chars.numeric)$(chars.accented)_

# Контекстное меню редактора
user.context.menu=||\
Block Comment or Uncomment|IDM_BLOCK_COMMENT|\
||\
Make Selection Uppercase|IDM_UPRCASE|\
Make Selection Lowercase|IDM_LWRCASE|\
||\
Toggle Bookmark|IDM_BOOKMARK_TOGGLE|

# Сохранять список недавно запущенных файлов (в меню Файл)
save.recent=1
# При запуске SciTE открывать файлы с котороми работали при прошлом сеансе
save.session=0
# Сохранять в файле сессии положение меток
session.bookmarks=1
# Сохранять в файле сессии фолдинг
session.folds=1
# Сохранять в файле сессии позицию и размеры окна SciTE
save.position=1

#font.0.base=!Liberation Mono
font.0.base=!Fixed
font.monospace=font:$(font.0.base),size:11
font.base=$(font.monospace)
font.small=$(font.0.base),size:10
font.comment=$(font.monospace),italics
font.text=$(font.monospace)
font.text.comment=$(font.monospace)
font.embedded.base=$(font.monospace)
font.embedded.comment=$(font.monospace)
font.vbs=$(font.monospace)

# Зададим типовые цвета, чтобы затем их использовать во всех языковых .properties.
colour.comment=fore:#008000
colour.code.comment.doc=$(colour.comment),back:#FEFEFE
colour.embedded.comment=back:#E0EEFF

colour.number=fore:#AC00A9
colour.keyword=fore:#0000DF
colour.string=fore:#5E5EAE
colour.char=$(colour.string)
colour.operator=fore:#FF0000
colour.preproc=fore:#7F7F00
colour.error=fore:#FFFF00,back:#FF0000
colour.whitespace=fore:#808080

# Возможные значения параметров для строки style:
# font:<name>, size:<number>, fore:<colour>, back:<colour>, italics|notitalics, bold|notbold, eolfilled|noteolfilled, underlined|notunderlined, case:m|u|l, visible|notvisible, changeable|notchangeable
# Если строке стиля параметр упоминается дважды (следует избегать!), то действует крайнее правое значение.

# Глобальные стили по умолчанию для всех языков программирования

# Заданный по умолчанию стиль, и его особенности будут унаследованы всеми другими стилями
style.*.32=$(font.base)

# Стиль для номеров строк (с левого края)
style.*.33=font:!Terminus,size:9,notbold

# Стиль используется, чтобы отобразить парные скобки () или {}
style.*.34=back:#99FFCC,bold

# Стиль используется, чтобы отобразить незакрытые скобки ( или {
style.*.35=back:#FFAAFF,bold
# Примечание: Для того, чтобы видеть фоновый цвет в style.*.34 и style.*.35, необходимо либо запретить caret.line.back либо использовать прозрачность (caret.line.back.alpha)

# Indentation guides
style.*.37=fore:#C0C0C0

# Стиль всплывающих подсказок по синтаксису (берутся из API файлов)
style.*.38=font:!Terminus,size:9

# Стиль для аннотаций
style.*.255=fore:#808080,back:#FEFEFE

# Колонка для фолдинга (свертывание/развертывание процедур)
fold.margin.colour=#ECE9D8
#~ fold.margin.highlight.colour=#0000FF

# Цвет завышенных по длине строк (или ограничительной линии)
edge.colour=#FFE8FF

# Цвет выделенного текста
selection.fore=
# DADADA used as background because it yields standard silver C0C0C0
# on low colour displays and a reasonable light grey on higher bit depths
if PLAT_WINNT
	selection.alpha=50
	selection.back=#000000
if PLAT_GTK
	selection.alpha=40
	selection.back=#000000

# Пробельные символы (пробел, табуляция)
whitespace.fore=#8F8F8F
#~whitespace.back=#FFF0F0

# Цвет обода метки
#~ bookmark.fore=#000000

# Фоновый цвет метки
#~ bookmark.back=#AA0000
#~ bookmark.alpha=

# Цвет обода метки на строку с источником ошибки (значение по умолчанию #7F0000)
#~ error.marker.fore=#FF0099

# Фоновый цвет метки, строки в коде с источником ошибки, и строки в консоли с текстом ошибки (значение по умолчанию #FFFF00)
#~ error.marker.back=#FF9999

# Фоновый цвет строки с текстом ошибки в окне консоли (если необходим цвет, отличный от error.marker.back) (только в SciTE-Ru)
#~ error.line.back=#330000

# Курсор
caret.fore=#0000FF
# Цвет подсветки линии с курсором
caret.line.back=#0099FF
# Прозрачность (от 0 до 255) символов на линии с курсором
caret.line.back.alpha=20

# Скорость мерцания курсора [мсек]
caret.period=500

# Мерцание во всех выделениях
#~ caret.additional.blinks=0

# Ширина курсора
#~ caret.width=2

caret.policy.xslop=1
caret.policy.width=20
caret.policy.xstrict=0
caret.policy.xeven=0
caret.policy.xjumps=0
caret.policy.yslop=1
caret.policy.lines=1
caret.policy.ystrict=1
caret.policy.yeven=1
caret.policy.yjumps=0
#~ visible.policy.strict=1
#~ visible.policy.slop=1
#~ visible.policy.lines=4
#~ caret.sticky=1

# При 1 SciTE после ввода каждой буквы будет услужливо выводить подсказку с возможными вариантами дополнения.
autocompleteword.automatic=1
# (индивидуальные параметры для языков - в соответствующих .properties)
autocomplete.*.ignorecase=1
calltip.*.ignorecase=1

# Define the Lexer menu,
# Each item contains three parts: menu string | file extension | key
# The only keys allowed currently are based on F-keys and alphabetic keys and look like
# [Ctrl+][Shift+][Fn|a] such as F12 or Ctrl+Shift+D.
# A '&' may be placed before a letter to be used as an accelerator. This does not work on GTK+.
menu.language=\
#FreeBasic|bas||\
Text|txt|Shift+F11|\
#Ada|ads||\
#Apache Confi&g|conf||\
#Assembler|asm||\
#ASN.1|asn1||\
#Avenue|ave||\
#Baan|bc||\
#&Batch|bat||\
#Bullant|ant||\
#&C / C++|c||\
#CMake|cmake||\
#C&#|cs||\
#COBOL|cob||\
#Csound|orc||\
CSS|css||\
#D|d||\
#&Difference|diff||\
#&Eiffel|e||\
#Erlang|erl||\
#&Errorlist|err||\
#FlagShip|prg||\
#Forth|forth||\
#&Fortran|f90||\
#Gap|g||\
H&ypertext|html|Shift+F12|\
#&InnoSetup|iss||\
#&Java|java||\
Java&Script|js||\
#&Kix|kix||\
#TeX|tex||\
#Lisp|lisp||\
#Lot|lot||\
#Lout|lt||\
Lu&a|lua||\
#Matlab|m.matlab||\
#&Makefile|mak|Ctrl+Shift+F11|\
#MetaPost|mp||\
#MMIXAL|mms||\
#&nnCron crontab|tab||\
#NSIS|nsis||\
#Objective Caml|ml||\
#Octave|m.octave||\
#Opal|impl||\
#Pascal|pas||\
Pe&rl|pl||\
P&HP|php||\
#P&LSQL|spec||\
#P&ostScript|ps||\
#P&OV-Ray SDL|pov||\
#PowerShell|ps1||\
#PowerPro|powerpro||\
#&Properties|properties||\
#Pytho&n|py||\
#R|R||\
#Reso&urce|rc||\
#Ruby|rb||\
Shell|sh||\
S&QL|sql||\
#Specman|e||\
#&TCL|tcl||\
#&VB|vb||\
#VBScr&ipt|vbs||\
#Verilog|v||\
#VHDL|vhd||\
&XML|xml||
#YAML|yaml||

# Import all the language specific properties files
#import abaqus
#import ada
#import asm
#import asn1
#import au3
#import ave
#import baan
#import freebasic
#import blitzbasic
#import bullant
#import caml
import conf
#import cobol
#import cpp
#import cmake
#import d
#import csound
import css
#import eiffel
#import erlang
#import escript
#import flagship
#import forth
#import fortran
#import gap
import html
#import inno
#import kix
#import lisp
#import lot
#import lout
import lua
#import matlab
#import metapost
#import mmixal
#import nimrod
#import nncrontab
#import nsis
#import opal
import others
#import pascal
import perl
#import pov
#import powerpro
#import powershell
#import ps
#import purebasic
import python
#import r
#import rebol
#import ruby
#import scriptol
#import smalltalk
#import spice
import sql
#import specman
#import tacl
#import tal
#import tcl
#import tex
#import vb
#import yaml
#import verilog
#import vhdl

all.files=All Files (*)|*|

# Формат записи: Пояснительный текст|маски файлов|
# Существует предел (возможно, 256 символов) на длину фильтра в Windows, поэтому не все расширения могут быть отображены
open.filter=\
$(all.files)\
$(filter.text)\
$(filter.web)\
$(filter.css)\
$(filter.js)\
$(filter.php)\
$(filter.perl)\
$(filter.bash)\
$(filter.sql)\
$(filter.lua)

save.filter=$(open.filter)

ext.lua.startup.script=$(SciteUserHome)/.SciTE/SciTEStartup.lua
#~ ext.lua.auto.reload=1
#~ ext.lua.reset=0

# Автозакрытие тегов. (Работает с помощью lua скрипта html_tags_autoclose.lua)
tags.autoclose=1

# Автозакрытие скобок. (Работает с помощью lua скрипта braces_autoclose.lua)
braces.autoclose=1

# для highlighting_paired_tags.lua:
hypertext.highlighting.paired.tags=1
find.mark.1=#0099FF
find.mark.2=#FF0000

tagfiles=$(file.patterns.html);$(file.patterns.xml)

command.name.5.$(tagfiles)=Copy Tags
command.5.$(tagfiles)=CopyTags
command.mode.5.$(tagfiles)=subsystem:lua,savebefore:no
command.shortcut.5.$(tagfiles)=Alt+C

command.name.6.$(tagfiles)=Paste Tags
command.6.$(tagfiles)=PasteTags
command.mode.6.$(tagfiles)=subsystem:lua,savebefore:no
command.shortcut.6.$(tagfiles)=Alt+P

command.name.7.$(tagfiles)=Delete Tags
command.7.$(tagfiles)=DeleteTags
command.mode.7.$(tagfiles)=subsystem:lua,savebefore:no
command.shortcut.7.$(tagfiles)=Alt+D

command.checked.8.$(tagfiles)=$(hypertext.highlighting.paired.tags)
command.name.8.$(tagfiles)=Highlighting Paired Tags
command.8.$(tagfiles)=highlighting_paired_tags_switch
command.mode.8.$(tagfiles)=subsystem:lua,savebefore:no